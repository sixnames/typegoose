(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{118:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return f}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),u=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=u(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=u(n),d=r,f=l["".concat(i,".").concat(d)]||l[d]||m[d]||a;return n?o.a.createElement(f,c(c({ref:t},p),{},{components:n})):o.a.createElement(f,c({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(2),o=n(6),a=(n(0),n(118)),i={id:"get-name",title:"Get Name For Class"},c={unversionedId:"api/functions/get-name",id:"api/functions/get-name",isDocsHomePage:!1,title:"Get Name For Class",description:"getName(class) gets the name of the resulting model (accounts for customName & automaticName)",source:"@site/../docs/api/functions/getName.md",slug:"/api/functions/get-name",permalink:"/typegoose/docs/api/functions/get-name",editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/api/functions/getName.md",version:"current",sidebar:"docs",previous:{title:"Get Model With String",permalink:"/typegoose/docs/api/functions/get-model-with-string"},next:{title:"Is Document",permalink:"/typegoose/docs/api/functions/typeguards/is-document"}},s=[{value:"Example",id:"example",children:[]}],p={rightToc:s};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"getName(class)")," gets the name of the resulting model (accounts for ",Object(a.b)("inlineCode",{parentName:"p"},"customName")," & ",Object(a.b)("inlineCode",{parentName:"p"},"automaticName"),")"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Note"),": this function only works on classes, not on models or schemas."),Object(a.b)("h2",{id:"example"},"Example"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'class Kitten {}\ngetName(Kitten); // "Kitten"\n\n@modelOptions({ options: { customName: \'SomeRandomKitten\' } })\nclass Kitten2 {}\ngetName(Kitten); // "SomeRandomKitten"\n\n@modelOptions({ schemaOptions: { collection: \'RandomKittens\' }, options: { automaticName: true } })\nclass Kitten3 {}\ngetName(Kitten); // "Kitten3_RandomKittens"\n')))}u.isMDXComponent=!0}}]);