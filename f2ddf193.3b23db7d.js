(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{111:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return d}));var r=n(2),o=n(6),a=(n(0),n(118)),i={id:"query-method",title:"Query Methods"},c={unversionedId:"api/decorators/query-method",id:"api/decorators/query-method",isDocsHomePage:!1,title:"Query Methods",description:"@queryMethod(func ReturnModelType, ...args: any]) => mongoose.DocumentQuery) is a decorator to add [custom query methods",source:"@site/../docs/api/decorators/queryMethod.md",slug:"/api/decorators/query-method",permalink:"/typegoose/docs/api/decorators/query-method",editUrl:"https://github.com/typegoose/typegoose/edit/master/docs/../docs/api/decorators/queryMethod.md",version:"current",sidebar:"docs",previous:{title:"Plugins",permalink:"/typegoose/docs/api/decorators/plugins"},next:{title:"Get Model For Class",permalink:"/typegoose/docs/api/functions/get-model-for-class"}},u=[],s={rightToc:u};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"@queryMethod(func: (this: ReturnModelType<U, QueryHelpers>, ...args: any[]) => mongoose.DocumentQuery)")," is a decorator to add ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://thecodebarbarian.com/mongoose-custom-query-methods"}),"custom query methods")),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"this")," needs to be defined to have the correct types inside the class (and to make it comaptible with ",Object(a.b)("inlineCode",{parentName:"li"},"@queryMethod"),")"),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"func")," is the function that should be added"),Object(a.b)("li",{parentName:"ul"},"the return type of the function needs to be ",Object(a.b)("inlineCode",{parentName:"li"},"mongoose.DocumentQuery"))),Object(a.b)("p",null,"Notes:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"The function needs to have a name and can't be an array-function (it needs to handle and use ",Object(a.b)("inlineCode",{parentName:"li"},"this"),")"),Object(a.b)("li",{parentName:"ul"},"It is recommended to not define the functions inside the decorator, like in the example below")),Object(a.b)("p",null,"Example:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ts"}),'// an interface is needed to add query-function types to the class\ninterface QueryHelpers {\n  // use the actual function types dynamically\n  findByName: QueryMethod<typeof findByName>;\n  findByLastname: QueryMethod<typeof findByLastname>;\n}\n\nfunction findByName(this: ReturnModelType<typeof QueryMethods, QueryHelpers>, name: string) {\n  return this.find({ name }); // important to not do an "await" and ".exec"\n}\n@queryMethod(findByName)\nclass QueryMethods {\n  @prop({ required: true })\n  public name: string;\n}\nconst QueryMethodsModel = getModelForClass(QueryMethods);\n\n// thanks to "QueryHelpers" the function "findByName" should exist here and return the correct type\nconst docs: DocumentType<QueryMethods>[] = await QueryMethodsModel.find()\n  .findByName(\'hello\')\n  .orFail()\n  .exec();\n')))}d.isMDXComponent=!0},118:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),d=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=d(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},y=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),l=d(n),y=r,m=l["".concat(i,".").concat(y)]||l[y]||p[y]||a;return n?o.a.createElement(m,c(c({ref:t},s),{},{components:n})):o.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=y;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);